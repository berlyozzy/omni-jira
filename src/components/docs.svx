# Omni-Jira: The Browser Extension

Omni-Jira is a browser extension designed to help with productivity using Jira by allowing to leverage multiple jira instances through chromium omnibox API.

- [Omni-Jira: The Browser Extension](#omni-jira-the-browser-extension)
  - [Browser Support](#browser-support)
  - [The tech behind](#the-tech-behind)
  - [Can I install it through Chrome Web Store?](#can-i-install-it-through-chrome-web-store)
  - [What does it do?](#what-does-it-do)
    - [History Module](#history-module)
    - [Smart Filters / Filters](#smart-filters--filters)
    - [Help](#help)
    - [Extension Options](#extension-options)
      - [Shortcuts](#shortcuts)
  - [Export/Import User Preferences](#exportimport-user-preferences)


## Browser Support

This extension is compatible with all chromium-based browsers supporting (Chrome, MS Edge, Firefox, Opera, Chromium), however there are few things to know about:

>**Chrome and Edge**:
>
>It can be installed and used unpacket. So far people haven't reported any issues using it on either of these browsers.

>**Firefox**:
>
>**Firefox limits the use of chromium APIs** for unpacked (temporary extensions). Because this extension hasn't been released, yet, for Firefox officially, it is **not supported**.

>**Opera**:
>
>By default the extension is saving user preferences to browser storage and syncs it to currently signed-in account (this allows replicating the same settings on another device). Opera doesn't support this feature, so preferences will be saved to local storage as a fallback. If you'll try installing this extension on another device running Opera, it'd use default settings: https://dev.opera.com/extensions/declare-permissions/

>**Safari**:
>
>Haven't tested this. To make this extension compatible with Safari it needs to be built through XCode: https://developer.apple.com/documentation/safariservices/safari_web_extensions.


## The tech behind

The extension was built using [Svelte](https://svelte.dev/), standard [Chrome APIs](https://developer.chrome.com/docs/extensions/) and [Bulma CSS framework](https://bulma.io/). 


## Can I install it through Chrome Web Store?

At the moment Omni-Jira is using Manifest v2 (MV2) and hasn't been moved to Manifest v3 (MV3) due to a [critical issue](https://bugs.chromium.org/p/chromium/issues/detail?id=1186804) with omnibox API, that is awaiting resolution. The issue prevents omnibox suggestions, which is a key-feature of this API and is also used by this extension.

[The support for MV2 extension](https://developer.chrome.com/docs/extensions/mv3/mv2-sunset/) in Chrome Web Store has ended in January 2022, meaning that this extensiong cannot be uploaded to the CWS in its current state.
 

## What does it do? 

Omni-Jira allows navigating jira tickets, projects and instances through a set of simple commands for the browser's address bar

* Open tickets by typing a Jira ticket number `jira TEST-549`ðŸ”¥
* Open projects by typing a project name `jira p TEST` or `jira p TEST2`ðŸ”¥
* Open instances by typing an instance key `jira INSTANCE`ðŸ”¥
* Search in any instance using keywords or JQL `jira INASTANCE_KEY keywords... ` or `jira INSTANCE jql project = TEST AND assignee = "example@email.com"`
* Save and open smart filters (e.g. `jira filter CUSTOM_FILTER_NAME/ID`) ðŸ”¥ðŸ”¥
* Have quick access to up-to 10 last opened Jira tickets
* Set your own shortcuts ðŸ”¥ðŸ”¥ðŸ”¥


> ðŸ”¥ Instances and projects need to be setup through extension options before they can be used
> 
> ðŸ”¥ðŸ”¥ Filters are accessible through the omnibox and extension popup. The user has to add filters to the extension through the popup interface or options page first
> 
> ðŸ”¥ðŸ”¥ðŸ”¥ Browser extensions allow for up-to 4 commands. [This is **an API limitation**](https://developer.chrome.com/docs/extensions/reference/commands/).

### History Module

Extension allows you to have quick access to up-to 10 last opened Jira tickets on any Jira instance. 

* See short info about the jira
* Remove it from the history module
* Use saved link to re-open it

Omni-Jira saves only unique links, no duplicates! 

> Please, note that some records may not have a title. This happens due to **redirects**. Records in the extension are generated by checking [opened page object information](https://developer.chrome.com/docs/extensions/reference/history/). If the title is missing, it is replaced by "**No Title**". This is not an extension bug. 

### Smart Filters / Filters

As a heavy user you now have an ability to save your favourite filters for a specified instance and access them through omnibox or an extension popup. 

* Add new filters through extension popup for a specified Jira instance
* Open any filter through extension popup
* Search through filters via omnibox by custom filter name or ID

### Help

The new Help section includes examples of omnibox commands and links to documentation (this page right here!). 

These examples are presented in a form of a small card. Users are able to check card contents at any time, copy an example by clicking on the card, paste it into browser's address bar and try it out as an Omni-Jira command.


### Extension Options

There are several things that can be changes/added to the default extension functionality after it was installed. 

To get to options:
1. Click on the extensions symbol next to the address bar
2. Find Omni-Jira in the list of installed extensions
3. Press on the 3 dots next to the pin and select "*Options*"

Users can add as many Jira instances as needed. Options page provides a simple interface to add new instances and saves your preferences to browser's [localStorage](https://developer.chrome.com/docs/extensions/reference/storage/) storage, synced with your logged-in account. Stored data is automatically synced to any Chrome browser that the user is logged into (*except for Opera*), provided the user has sync enabled (see `storage.sync` details).


#### Shortcuts

(*I, personally, assigned these shortcuts to open different dashboards*)

## Export/Import User Preferences

By default, Omni-Jira syncs users preferences with signed-in account to make them available across all devices, where the user is signed-in (*This feature is not supported on Opera. On this browser it falls back to storing data in local storage.*)

However, some users may use different browsers, would want to share their preferences with others (company-wide e.g) or are not using an account/use don't sync their data. 

For such cases, the extension comes with Export/Import feature. It allows users exporting their preferences as a JSON file and then importing anywhere else, or sharing it with colleagues. 
